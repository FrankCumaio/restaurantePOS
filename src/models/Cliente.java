package models;
// Generated Sep 23, 2015 11:22:21 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Cliente generated by hbm2java
 */
@Entity
@Table(name="cliente"
    ,catalog="sgrestaurante"
)
public class Cliente  implements java.io.Serializable {


     private Integer idCliente;
     private Contacto contacto;
     private Identificacao identificacao;
     private Morada morada;
     private String nome;
     private String sexo;
     private Set<Reservas> reservases = new HashSet<Reservas>(0);
     private Set<Vendas> vendases = new HashSet<Vendas>(0);

    public Cliente() {
    }

	
    public Cliente(Contacto contacto, Identificacao identificacao, Morada morada, String nome, String sexo) {
        this.contacto = contacto;
        this.identificacao = identificacao;
        this.morada = morada;
        this.nome = nome;
        this.sexo = sexo;
    }
    public Cliente(Contacto contacto, Identificacao identificacao, Morada morada, String nome, String sexo, Set<Reservas> reservases, Set<Vendas> vendases) {
       this.contacto = contacto;
       this.identificacao = identificacao;
       this.morada = morada;
       this.nome = nome;
       this.sexo = sexo;
       this.reservases = reservases;
       this.vendases = vendases;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idCliente", unique=true, nullable=false)
    public Integer getIdCliente() {
        return this.idCliente;
    }
    
    public void setIdCliente(Integer idCliente) {
        this.idCliente = idCliente;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Contacto_idContacto", nullable=false)
    public Contacto getContacto() {
        return this.contacto;
    }
    
    public void setContacto(Contacto contacto) {
        this.contacto = contacto;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Identificacao_idIdentificacao", nullable=false)
    public Identificacao getIdentificacao() {
        return this.identificacao;
    }
    
    public void setIdentificacao(Identificacao identificacao) {
        this.identificacao = identificacao;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Morada_idMorada", nullable=false)
    public Morada getMorada() {
        return this.morada;
    }
    
    public void setMorada(Morada morada) {
        this.morada = morada;
    }

    
    @Column(name="nome", nullable=false)
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }

    
    @Column(name="sexo", nullable=false, length=45)
    public String getSexo() {
        return this.sexo;
    }
    
    public void setSexo(String sexo) {
        this.sexo = sexo;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cliente")
    public Set<Reservas> getReservases() {
        return this.reservases;
    }
    
    public void setReservases(Set<Reservas> reservases) {
        this.reservases = reservases;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="vendas_has_cliente", catalog="sgrestaurante", joinColumns = { 
        @JoinColumn(name="Cliente_idCliente", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="Vendas_idVendas", nullable=false, updatable=false) })
    public Set<Vendas> getVendases() {
        return this.vendases;
    }
    
    public void setVendases(Set<Vendas> vendases) {
        this.vendases = vendases;
    }




}


